{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "appServicePlanName": {
      "type": "string",
      "maxLength": 40,
      "metadata": {
        "description": "App Service plan name."
      }
    },
    "appServiceName": {
      "type": "string",
      "maxLength": 47,
      "metadata": {
        "description": "App Service name."
      }
    },
    "storageAccountName": {
      "type": "string",
      "maxLength": 24,
      "metadata": {
        "description": "Storage account name."
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": ["Premium_LRS", "Standard_LRS", "Standard_GRS"],
      "metadata": {
        "description": "Storage account type allowed values"
      }
    },
    "functionAppName": {
      "type": "string",
      "maxLength": 47,
      "metadata": {
        "description": "Function app name."
      }
    },
    "functionAppStor": {
      "type": "string",
      "maxLength": 24,
      "metadata": {
        "description": "Storage account name."
      }
    },
    "functionAppStorType": {
      "type": "string",
      "allowedValues": ["Premium_LRS", "Standard_LRS", "Standard_GRS"],
      "metadata": {
        "description": "Storage account type allowed values"
      }
    },
    "ERPUrl": {
      "type": "string",
      "metadata": {
        "description": "URL to the ERP system."
      }
    },
    "TenantId": {
      "type": "string",
      "metadata": {
        "description": "Tenant ID"
      }
    },
    "ClientId": {
      "type": "string",
      "metadata": {
        "description": "URL to the package."
      }
    },
    "password": {
      "type": "secureString",
      "metadata": {
        "description": "client id secret"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located including a trailing '/' [deployment().properties.templateLink.uri]"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
      },
      "defaultValue": ""
    },
    "ExFlowPackageManagerUrl": {
      "type": "string",
      "metadata": {
        "description": "ExFlow package manager URL to validate license & download package."
      },
      "defaultValue": "https://packagemanager.exflow.cloud"
    },
    "ExFlowWebPackageLicense": {
      "type": "string",
      "metadata": {
        "description": "ExFlowPackageLicense for downloading packages"
      },
      "defaultValue": ""
    },
    "ExFlowPackageVersion": {
      "type": "string",
      "metadata": {
        "description": "Controls which version to download (default: latest)"
      },
      "defaultValue": "vnextgroup1"
    },
    "ExFlowPackagePath": {
      "type": "string",
      "metadata": {
        "description": "controls path where ExFlow Package is locatged (default: latest)"
      },
      "defaultValue": ".blob.core.windows.net/exflowpackage/package.zip?"
    },
    "ExFlowConnectionpath": {
      "type": "string",
      "metadata": {
        "description": "controls endpoint for ExFlow web to storage account"
      },
      "defaultValue": ".table.core.windows.net/"
    },
    "ExFlowConnectionpath": {
      "type": "string",
      "metadata": {
        "description": "controls endpoint for ExFlow web to storage account"
      },
      "defaultValue": ".table.core.windows.net/"
    },
    "DynamicSchedule": {
      "type": "string",
      "defaultValue": "[format('{0} {1} {2} {3} {4} {5}', utcNow('ss'), utcNow('mm'), utcNow('hh'), '*', '*', '0')]",
      "metadata": {
        "description": "Dynamic Schedule for downloading ExFlow Web Package is set to at the same time of day the deployment was done, every sunday."
      }
    },
    "MSLoginURL": {
      "type": "string",
      "defaultValue": "login.microsoftonline.com",
      "metadata": {
        "description": "Dynamic Schedule for downloading ExFlow Web Package is set to at the same time of day the deployment was done, every sunday."
      }
    }
  },
  "variables": {
    "appServicePlanSku": "B1",
    "appServicePlanCapacity": 1,
    "appServiceName": "[parameters('appServiceName')]",
    "appServiceNamFA": "[parameters('functionAppName')]",
    "storageAccountName": "[parameters('storageAccountName')]",
    "storageAccountNameFA": "[parameters('functionAppStor')]",
    "zipUrl": "[uri(parameters('_artifactsLocation'), concat('artifacts/SelfHostedPackageManger.zip', parameters('_artifactsLocationSasToken')))]",
    "accountSasProperties": {
      "signedServices": "b",
      "signedPermission": "rl",
      "signedExpiry": "2035-03-01T00:00:01Z",
      "signedResourceTypes": "o",
      "canonicalizedResource": "[concat('/blob/', parameters('functionAppStor'), '/exflowpackage/package.zip')]"
    },
    "AdminConsent": "[concat('https://', parameters('MSLoginURL'), '/organizations/v2.0/adminconsent?client_id=', parameters('ClientId'), '&state=12345&redirect_uri=https://', parameters('appServiceName'), '.azurewebsites.net&scope=https://erp.dynamics.com/AX.FullAccess https://graph.microsoft.com/User.ReadBasic.All https://graph.microsoft.com/User.Read')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('appServicePlanSku')]",
        "capacity": "[variables('appServicePlanCapacity')]"
      }
    },
    {
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('appServicePlanName')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('location')]",
      "kind": "web",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('appServiceName'))]": "Resource",
        "displayName": "AppInsightsComponent"
      },
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('appServiceName')]",
      "kind": "app",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "AdminConsent",
              "value": "[variables('AdminConsent')]"
            },
            {
              "name": "AppControl:Dynamics:ServiceAddress",
              "value": "[parameters('ERPUrl')]"
            },
            {
              "name": "AppControl:Dynamics:ServiceTenantId",
              "value": "[parameters('TenantId')]"
            },
            {
              "name": "AzureAD:TenantId",
              "value": "[parameters('TenantId')]"
            },
            {
              "name": "AppControl:ConnectionString",
              "value": "[concat('https://', variables('storageAccountName'), parameters('ExFlowConnectionpath'))]"
            },
            {
              "name": "AppControl:FO",
              "value": "true"
            },
            {
              "name": "AzureAD:ClientId",
              "value": "[parameters('ClientId')]"
            },
            {
              "name": "AzureAD:ClientSecret",
              "value": "[concat('@Microsoft.KeyVault(VaultName=', variables('appServiceName'), ';SecretName=', 'ClientSecret)')]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "[concat('https://', parameters('functionAppStor'), parameters('ExFlowPackagePath'), listAccountSas(resourceId('Microsoft.Storage/storageAccounts', parameters('functionAppStor')), '2024-01-01', variables('accountSasProperties')).accountSasToken)]"
            },
            {
              "Name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "Value": "[reference(resourceId('Microsoft.Insights/components', parameters('appServicePlanName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "Name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "Value": "[reference(resourceId('Microsoft.Insights/components', parameters('appServicePlanName')), '2020-02-02').ConnectionString]"
            },
            {
              "Name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
              "Value": "disabled"
            },
            {
              "Name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
              "Value": "disabled"
            },
            {
              "Name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "Value": "~2"
            },
            {
              "Name": "DiagnosticServices_EXTENSION_VERSION",
              "Value": "disabled"
            },
            {
              "Name": "InstrumentationEngine_EXTENSION_VERSION",
              "Value": "disabled"
            },
            {
              "Name": "SnapshotDebugger_EXTENSION_VERSION",
              "Value": "disabled"
            },
            {
              "Name": "XDT_MicrosoftApplicationInsights_BaseExtensions",
              "Value": "disabled"
            },
            {
              "Name": "XDT_MicrosoftApplicationInsights_Java",
              "Value": "1"
            },
            {
              "Name": "XDT_MicrosoftApplicationInsights_Mode",
              "Value": "recommended"
            },
            {
              "Name": "XDT_MicrosoftApplicationInsights_NodeJS",
              "Value": "1"
            },
            {
              "Name": "XDT_MicrosoftApplicationInsights_PreemptSdk",
              "Value": "disabled"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "allowCrossTenantReplication": false,
        "allowBlobPublicAccess": false,
        "minimumTlsVersion": "TLS1_2",
        "defaultToOAuthAuthentication": true,
        "allowSharedKeyAccess": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[variables('appServiceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]"
      ],
      "properties": {
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('appServiceName')), '2019-08-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": ["list", "get"]
            },
            "tenantId": "[subscription().tenantId]"
          }
        ],
        "createMode": "default",
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableRbacAuthorization": false,
        "enableSoftDelete": true,
        "publicNetworkAccess": "enabled",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "softDeleteRetentionInDays": 90,
        "tenantId": "[subscription().tenantId]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[concat(variables('appServiceName'), '/ClientSecret')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('appServiceName'))]"
      ],
      "properties": {
        "value": "[parameters('password')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('appServiceNamFA')]",
      "kind": "functionapp",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "Value": "[reference(resourceId('Microsoft.Insights/components', parameters('appServicePlanName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountNameFA'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFA')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "DynamicSchedule",
              "value": "[parameters('DynamicSchedule')]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountNameFA'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFA')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "ExFlowPackage:ManagerUrl",
              "value": "[parameters('ExFlowPackageManagerUrl')]"
            },
            {
              "name": "ExFlowPackage:License",
              "value": "[parameters('ExFlowWebPackageLicense')]"
            },
            {
              "name": "ExFlowPackage:Version",
              "value": "[parameters('ExFlowPackageVersion')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet-isolated"
            },
            {
              "name": "AzureWebJobsSecretStorageType",
              "value": "files"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('appServiceNamFA'))]"
            },
            {
              "name": "WEBSITE_USE_PLACEHOLDER_DOTNETISOLATED",
              "value": "1"
            }
          ],
          "netFrameworkVersion": "v8.0"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFA'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/extensions",
      "apiVersion": "2021-03-01",
      "name": "[concat(variables('appServiceNamFA'), '/MSDeploy')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites/', variables('appServiceNamFA'))]"
      ],
      "properties": {
        "packageUri": "[variables('zipUrl')]"
      },
      "condition": "[not(equals(variables('zipUrl'), ''))]"
    },
    {
      "type": "Microsoft.Web/sites/providers/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[concat(variables('appServiceName'), '/Microsoft.Authorization/', guid(concat(variables('appServiceName'), 'webContrib')))]",
      "properties": {
        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'de139f84-1756-47ae-9be6-808fbbe84772')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('appServiceNamFA')), '2019-08-01', 'full').identity.principalId]",
        "scope": "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[variables('storageAccountNameFA')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "defaultToOAuthAuthentication": false,
        "accessTier": "Hot",
        "allowSharedKeyAccess": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[concat(variables('storageAccountName'), '/Microsoft.Authorization/', guid(concat(variables('appServiceName'), 'blob')))]",
      "properties": {
        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('appServiceName')), '2019-08-01', 'full').identity.principalId]",
        "scope": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[concat(variables('storageAccountName'), '/Microsoft.Authorization/', guid(concat(variables('appServiceName'), 'table')))]",
      "properties": {
        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('appServiceName')), '2019-08-01', 'full').identity.principalId]",
        "scope": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "principalType": "ServicePrincipal"
      }
    }
  ],
  "outputs": {
    "ClientId": {
      "type": "string",
      "value": "[parameters('ClientId')]"
    },
    "entraPostScript": {
      "type": "string",
      "value": "[concat('https://docs.signupsoftware.com/web/hosting/selfhosted/postinstall?ClientId=', parameters('ClientId'), '&AppName=', parameters('appServiceName'))]"
    }
  }
}
